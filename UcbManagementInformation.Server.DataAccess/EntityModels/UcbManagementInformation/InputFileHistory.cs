//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.ServiceModel.DomainServices.Server;

namespace UcbManagementInformation.Server.DataAccess
{
    public partial class InputFileHistory
    {
        #region Primitive Properties
    
        public virtual System.Guid Code
        {
            get;
            set;
        }
    
        public virtual string FileType
        {
            get;
            set;
        }
    
        public virtual string Filename
        {
            get;
            set;
        }
    
        public virtual System.DateTime TransferDate
        {
            get;
            set;
        }
    
        public virtual string ProviderOrganisationKeyValue
        {
            get;
            set;
        }
    
        public virtual string Status
        {
            get;
            set;
        }
    
        public virtual string LoadedBy
        {
            get;
            set;
        }
    
        public virtual System.DateTime LoadedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> ValidatedLoadDate
        {
            get;
            set;
        }
    
        public virtual int UploadDecision
        {
            get;
            set;
        }
    
        public virtual int NumberOfRecords
        {
            get;
            set;
        }
    
        public virtual int NumberOfValidRecords
        {
            get;
            set;
        }
    
        public virtual int NumberOfErrorRecords
        {
            get;
            set;
        }
    
        public virtual int NumberOfWarningRecords
        {
            get;
            set;
        }
    
        public virtual int NumberOfInformationalRecords
        {
            get;
            set;
        }
    
        public virtual byte[] RowIdentifier
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<InputFileError> InputFileErrors
        {
            get
            {
                if (_inputFileErrors == null)
                {
                    var newCollection = new FixupCollection<InputFileError>();
                    newCollection.CollectionChanged += FixupInputFileErrors;
                    _inputFileErrors = newCollection;
                }
                return _inputFileErrors;
            }
            set
            {
                if (!ReferenceEquals(_inputFileErrors, value))
                {
                    var previousValue = _inputFileErrors as FixupCollection<InputFileError>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupInputFileErrors;
                    }
                    _inputFileErrors = value;
                    var newValue = value as FixupCollection<InputFileError>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupInputFileErrors;
                    }
                }
            }
        }
        private ICollection<InputFileError> _inputFileErrors;
    
        public virtual ICollection<ProviderOrganisation> ProviderOrganisations
        {
            get
            {
                if (_providerOrganisations == null)
                {
                    var newCollection = new FixupCollection<ProviderOrganisation>();
                    newCollection.CollectionChanged += FixupProviderOrganisations;
                    _providerOrganisations = newCollection;
                }
                return _providerOrganisations;
            }
            set
            {
                if (!ReferenceEquals(_providerOrganisations, value))
                {
                    var previousValue = _providerOrganisations as FixupCollection<ProviderOrganisation>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupProviderOrganisations;
                    }
                    _providerOrganisations = value;
                    var newValue = value as FixupCollection<ProviderOrganisation>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupProviderOrganisations;
                    }
                }
            }
        }
        private ICollection<ProviderOrganisation> _providerOrganisations;
    
        public virtual ICollection<UploadMonitor> UploadMonitors
        {
            get
            {
                if (_uploadMonitors == null)
                {
                    var newCollection = new FixupCollection<UploadMonitor>();
                    newCollection.CollectionChanged += FixupUploadMonitors;
                    _uploadMonitors = newCollection;
                }
                return _uploadMonitors;
            }
            set
            {
                if (!ReferenceEquals(_uploadMonitors, value))
                {
                    var previousValue = _uploadMonitors as FixupCollection<UploadMonitor>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUploadMonitors;
                    }
                    _uploadMonitors = value;
                    var newValue = value as FixupCollection<UploadMonitor>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUploadMonitors;
                    }
                }
            }
        }
        private ICollection<UploadMonitor> _uploadMonitors;

        #endregion
        #region Association Fixup
    
        private void FixupInputFileErrors(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (InputFileError item in e.NewItems)
                {
                    item.InputFileHistory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (InputFileError item in e.OldItems)
                {
                    if (ReferenceEquals(item.InputFileHistory, this))
                    {
                        item.InputFileHistory = null;
                    }
                }
            }
        }
    
        private void FixupProviderOrganisations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ProviderOrganisation item in e.NewItems)
                {
                    item.InputFileHistory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProviderOrganisation item in e.OldItems)
                {
                    if (ReferenceEquals(item.InputFileHistory, this))
                    {
                        item.InputFileHistory = null;
                    }
                }
            }
        }
    
        private void FixupUploadMonitors(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UploadMonitor item in e.NewItems)
                {
                    item.InputFileHistory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UploadMonitor item in e.OldItems)
                {
                    if (ReferenceEquals(item.InputFileHistory, this))
                    {
                        item.InputFileHistory = null;
                    }
                }
            }
        }

        #endregion
    }
}
