//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;
using System.ServiceModel.DomainServices.Server;

namespace UcbManagementInformation.Server.DataAccess
{
    public partial class Application
    {
        #region Primitive Properties
    
        public virtual System.Guid Code
        {
            get;
            set;
        }
    
        public virtual System.Guid SecurityLabel
        {
            get;
            set;
        }
    
        public virtual string ApplicationName
        {
            get;
            set;
        }
    
        public virtual string Location
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual bool IsSpecificOrganisationAccessRequired
        {
            get;
            set;
        }
    
        public virtual byte[] RowIdentifier
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<ApplicationAttribute> ApplicationAttributes
        {
            get
            {
                if (_applicationAttributes == null)
                {
                    var newCollection = new FixupCollection<ApplicationAttribute>();
                    newCollection.CollectionChanged += FixupApplicationAttributes;
                    _applicationAttributes = newCollection;
                }
                return _applicationAttributes;
            }
            set
            {
                if (!ReferenceEquals(_applicationAttributes, value))
                {
                    var previousValue = _applicationAttributes as FixupCollection<ApplicationAttribute>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupApplicationAttributes;
                    }
                    _applicationAttributes = value;
                    var newValue = value as FixupCollection<ApplicationAttribute>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupApplicationAttributes;
                    }
                }
            }
        }
        private ICollection<ApplicationAttribute> _applicationAttributes;
    
        public virtual ICollection<StaffAttribute> StaffAttributes
        {
            get
            {
                if (_staffAttributes == null)
                {
                    var newCollection = new FixupCollection<StaffAttribute>();
                    newCollection.CollectionChanged += FixupStaffAttributes;
                    _staffAttributes = newCollection;
                }
                return _staffAttributes;
            }
            set
            {
                if (!ReferenceEquals(_staffAttributes, value))
                {
                    var previousValue = _staffAttributes as FixupCollection<StaffAttribute>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStaffAttributes;
                    }
                    _staffAttributes = value;
                    var newValue = value as FixupCollection<StaffAttribute>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStaffAttributes;
                    }
                }
            }
        }
        private ICollection<StaffAttribute> _staffAttributes;

        #endregion
        #region Association Fixup
    
        private void FixupApplicationAttributes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ApplicationAttribute item in e.NewItems)
                {
                    item.Application = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ApplicationAttribute item in e.OldItems)
                {
                    if (ReferenceEquals(item.Application, this))
                    {
                        item.Application = null;
                    }
                }
            }
        }
    
        private void FixupStaffAttributes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StaffAttribute item in e.NewItems)
                {
                    item.Application = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StaffAttribute item in e.OldItems)
                {
                    if (ReferenceEquals(item.Application, this))
                    {
                        item.Application = null;
                    }
                }
            }
        }

        #endregion
    }
}
