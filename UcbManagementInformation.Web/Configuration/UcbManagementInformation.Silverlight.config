<?xml version="1.0"?>
<configuration>
  
  <configSections>    
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
  </configSections>
  
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="default"
    logWarningsWhenNoCategoriesMatch="false">
    <listeners>
      <add name="service" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RemoteServiceTraceListener, Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RemoteServiceTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        loggingServiceFactory="CustomBinding_ILoggingService" maxElementsInBuffer="200"
        isolatedStorageBufferMaxSizeInKilobytes="256" />
      <add name="event" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.NotificationTraceListener, Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.NotificationTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <add name="isolated" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.IsolatedStorageTraceListener, Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.IsolatedStorageTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Silverlight.Configuration.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        repositoryName="LogMessagesInIsolatedStorage" />
    </listeners>
    <categorySources>
      <add switchValue="Warning" name="default">
        <listeners>
          <add name="isolated" />
        </listeners>
      </add>
      <add switchValue="Error" name="Exception">
        <listeners>
          <add name="service" />
          <add name="isolated" />
        </listeners>
      </add>
      <add switchValue="All" name="Validation">
        <listeners>
          <add name="service" />
          <add name="isolated" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events">
        <listeners>
          <add name="event" />
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="isolated" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="event" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      
      <add name="Service Exception">
        <exceptionTypes>
          <add name="WCF RIA Services Exception" type="System.ServiceModel.CommunicationException, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None">
            <exceptionHandlers>
              <add name="Wrap Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WrapHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                wrapExceptionType="UcbManagementInformation.ExceptionHandling.ServiceUnavailableException, UcbManagementInformation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
              <add ErrorMessageType="TechnicalErrorMessage" type="UcbManagementInformation.ExceptionHandling.DisplayErrormessageExceptionHandler, UcbManagementInformation"
                name="Display Message Exception Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      
      <add name="Unhandled Exception">
        <exceptionTypes>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                logCategory="Exception" eventId="5" severity="Critical" title="Unhandled exception in Management Information client application"
                formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                priority="-1" />
              <add ErrorMessageType="TechnicalErrorMessage" type="UcbManagementInformation.ExceptionHandling.DisplayErrormessageExceptionHandler, UcbManagementInformation"
                  name="Display Message Exception Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      
    </exceptionPolicies>
  </exceptionHandling>
</configuration>
